name: Angular CI with SonarCloud and Docker Deploy

on:
  push:
    branches:
      - matchFront

jobs:

  install_dependencies:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache npm modules
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm install --legacy-peer-deps

  build_project:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Build Angular project (production)
        run: npm run build -- --configuration production

  run_tests:
    needs: build_project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run unit tests with coverage (ignore failures)
        run: npm run test -- --watch=false --code-coverage || echo "Tests failed but continuing..."

  sonarcloud_scan:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: SonarCloud analysis
        uses: SonarSource/sonarqube-scan-action@v2.0.0
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

  docker_build_and_push:
    needs: sonarcloud_scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Define Docker image tag
        run: echo IMAGE_TAG=${GITHUB_SHA} >> $GITHUB_ENV

      - name: Login to Nexus Docker Registry
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login https://454a-165-51-179-72.ngrok-free.app -u ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build Docker image with tags
        run: |
          docker build \
            -t 454a-165-51-179-72.ngrok-free.app/devopsfront:${IMAGE_TAG} \
            -t 454a-165-51-179-72.ngrok-free.app/devopsfront:latest \
            .

      - name: Push Docker images to Nexus
        run: |
          docker push 454a-165-51-179-72.ngrok-free.app/devopsfront:${IMAGE_TAG}
          docker push 454a-165-51-179-72.ngrok-free.app/devopsfront:latest
